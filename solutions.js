import {groups} from './groups.js';

// Generated by ChatGPT
const templates = [
  "A {product_type} for {group} that {function}",
  "A {product_type} to {function} for {group}",
  "A {function} {product_type} for {group}",
  "A {product_type} to {function} with {group}",
  "A {group} {product_type} that {function}",
  "A {product_type} for {group} to {function}",
  "A {group} {function} {product_type}",
  "A {product_type} that {function} for {group}",
  "{function} {group} with a new {product_type}",
  "A {group} {product_type} for {function}",
];

function pickRandom(list) {
  return list[Math.floor(Math.random()*list.length)];
}

export function generateSolution() {
  const substitutions = {
    product_type: pickRandom(product_types),
    group: pickRandom(groups),
    function: '{function}',
  };
  // Performance here could be improved
  // ...but this will be invoked on a device in response to user action
  // ...in other words, I can't think of a practical reason to optimize this
  let out = pickRandom(templates);
  for (const [key, val] of Object.entries(substitutions)) {
    out = out.replace(`{${key}}`, val);
  }
  return out;
}

// Generated by ChatGPT
const product_types = [
  "app",
  "service",
  "device",
  "platform",
  "program",
  "system",
  "tool",
  "gadget",
  "invention",
  // "creation",  Doesn't actually work well
];

